diff --git a/dashboard_server.py b/dashboard_server.py
new file mode 100755
index 0000000..933c461
--- /dev/null
+++ b/dashboard_server.py
@@ -0,0 +1,45 @@
+#!/usr/bin/env python3
+"""
+Enhanced Trading Bot - Dashboard Server
+Point d'entr√©e simple pour lancer le dashboard web
+"""
+
+import sys
+import os
+from pathlib import Path
+
+# Ajouter le dossier dashboard au path
+dashboard_path = Path(__file__).parent / "dashboard"
+sys.path.insert(0, str(dashboard_path))
+
+# Ajouter le dossier racine pour acc√®s aux modules src
+sys.path.insert(0, str(Path(__file__).parent))
+
+if __name__ == "__main__":
+    try:
+        from dashboard.app import create_app
+        
+        print("üåê === ENHANCED TRADING BOT DASHBOARD ===")
+        print("üìä D√©marrage du serveur web...")
+        
+        app = create_app()
+        
+        print("‚úÖ Dashboard disponible sur:")
+        print("   üè† Local: http://localhost:5000")
+        print("   üì± R√©seau: http://192.168.1.XXX:5000")
+        print("   üõë Ctrl+C pour arr√™ter")
+        
+        app.run(
+            host='0.0.0.0',
+            port=5000,
+            debug=False,
+            use_reloader=False
+        )
+        
+    except ImportError as e:
+        print(f"‚ùå Erreur import dashboard: {e}")
+        print("üí° Installez les d√©pendances: pip install flask")
+        sys.exit(1)
+    except Exception as e:
+        print(f"‚ùå Erreur d√©marrage: {e}")
+        sys.exit(1)
diff --git a/manage_dashboard.sh b/manage_dashboard.sh
new file mode 100755
index 0000000..99c7f05
--- /dev/null
+++ b/manage_dashboard.sh
@@ -0,0 +1,83 @@
+#!/bin/bash
+# Script de gestion du dashboard Enhanced Trading Bot
+
+DASHBOARD_SCRIPT="dashboard_server.py"
+DASHBOARD_PID_FILE="dashboard.pid"
+LOG_FILE="logs/dashboard.log"
+
+# Cr√©er le dossier logs si n√©cessaire
+mkdir -p logs
+
+case "$1" in
+    start)
+        if [ -f "$DASHBOARD_PID_FILE" ] && kill -0 $(cat "$DASHBOARD_PID_FILE") 2>/dev/null; then
+            echo "‚ö†Ô∏è  Dashboard d√©j√† en cours (PID: $(cat $DASHBOARD_PID_FILE))"
+        else
+            echo "üöÄ D√©marrage du dashboard..."
+            source venv/bin/activate
+            nohup python3 $DASHBOARD_SCRIPT > $LOG_FILE 2>&1 &
+            PID=$!
+            echo $PID > $DASHBOARD_PID_FILE
+            sleep 2
+            if kill -0 $PID 2>/dev/null; then
+                echo "‚úÖ Dashboard d√©marr√© (PID: $PID)"
+                echo "üîó Accessible sur: http://localhost:5000"
+                echo "üìã Logs: tail -f $LOG_FILE"
+            else
+                echo "‚ùå √âchec d√©marrage dashboard"
+                rm -f $DASHBOARD_PID_FILE
+            fi
+        fi
+        ;;
+    stop)
+        if [ -f "$DASHBOARD_PID_FILE" ]; then
+            PID=$(cat $DASHBOARD_PID_FILE)
+            echo "üõë Arr√™t du dashboard (PID: $PID)..."
+            kill $PID 2>/dev/null
+            rm -f $DASHBOARD_PID_FILE
+            sleep 2
+            if kill -0 $PID 2>/dev/null; then
+                echo "‚ö†Ô∏è  Arr√™t forc√©..."
+                kill -9 $PID 2>/dev/null
+            fi
+            echo "‚úÖ Dashboard arr√™t√©"
+        else
+            echo "‚ÑπÔ∏è  Dashboard d√©j√† arr√™t√©"
+        fi
+        ;;
+    restart)
+        $0 stop
+        sleep 2
+        $0 start
+        ;;
+    status)
+        if [ -f "$DASHBOARD_PID_FILE" ] && kill -0 $(cat "$DASHBOARD_PID_FILE") 2>/dev/null; then
+            PID=$(cat $DASHBOARD_PID_FILE)
+            echo "‚úÖ Dashboard en cours (PID: $PID)"
+            echo "üîó URL: http://localhost:5000"
+            echo "üìã Logs: tail -f $LOG_FILE"
+        else
+            echo "‚ùå Dashboard arr√™t√©"
+            rm -f $DASHBOARD_PID_FILE 2>/dev/null
+        fi
+        ;;
+    logs)
+        if [ -f "$LOG_FILE" ]; then
+            echo "üìã Logs du dashboard (Ctrl+C pour quitter):"
+            tail -f $LOG_FILE
+        else
+            echo "‚ùå Fichier de logs non trouv√©: $LOG_FILE"
+        fi
+        ;;
+    *)
+        echo "Usage: $0 {start|stop|restart|status|logs}"
+        echo ""
+        echo "Commandes:"
+        echo "  start   - D√©marre le dashboard en arri√®re-plan"
+        echo "  stop    - Arr√™te le dashboard"
+        echo "  restart - Red√©marre le dashboard"
+        echo "  status  - Affiche le statut du dashboard"
+        echo "  logs    - Affiche les logs en temps r√©el"
+        exit 1
+        ;;
+esac
